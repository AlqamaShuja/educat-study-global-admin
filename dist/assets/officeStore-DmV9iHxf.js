import{a as n}from"./userService-CYy00l9J.js";import{c as u,y as c}from"./index-D_0a8VZH.js";import{a as i}from"./officeService-CJb98nQG.js";const h=u((r,o)=>({currentStaff:null,profile:null,users:[],students:[],loading:!1,isLoading:!1,error:null,dashboard:{},getStaffById:async e=>{r({isLoading:!0,error:null});try{const a=await n.getStaffById(e);return r({currentStaff:a}),a}catch(a){throw r({error:a.message||"Failed to fetch staff member"}),c.error("Failed to fetch staff member"),a}finally{r({isLoading:!1})}},fetchProfile:async()=>{r({loading:!0,error:null});try{const e=await n.getProfile();r({profile:e})}catch(e){throw r({error:e.message||"Failed to fetch profile"}),e}finally{r({loading:!1})}},updateProfile:async e=>{r({loading:!0,error:null});try{const a=await n.updateProfile(e);return r({profile:a}),a}catch(a){throw r({error:a.message||"Failed to update profile"}),a}finally{r({loading:!1})}},fetchAllStaff:async()=>{r({isLoading:!0,error:null});try{const e=await n.getAllStaff();r({users:e})}catch(e){throw r({error:e.message||"Failed to fetch staff"}),e}finally{r({isLoading:!1})}},fetchManagers:async()=>{r({isLoading:!0,error:null});try{const e=o().users;if(e.length)return e.filter(t=>t.role==="manager");const a=await n.getManagers();return r(t=>({users:[...t.users.filter(s=>s.role!=="manager"),...a]})),a}catch(e){throw r({error:e.message||"Failed to fetch managers"}),e}finally{r({isLoading:!1})}},fetchConsultants:async()=>{r({isLoading:!0,error:null});try{const e=o().users;if(e.length)return e.filter(t=>t.role==="consultant");const a=await n.getConsultants();return r(t=>({users:a})),a}catch(e){throw r({error:e.message||"Failed to fetch consultants"}),e}finally{r({isLoading:!1})}},fetchStudents:async()=>{r({isLoading:!0,error:null});try{const e=await n.getAllStudents();return r(a=>({students:e})),e}catch(e){throw r({error:e.message||"Failed to fetch consultants"}),e}finally{r({isLoading:!1})}},fetchSuperAdminDashboard:async(e={})=>{r({isLoading:!0,error:null});try{const a=await n.getSuperAdminDashboardData(e);return r(t=>({dashboard:a})),a}catch(a){throw r({error:a.message||"Failed to fetch consultants"}),a}finally{r({isLoading:!1})}},updateLeadAssign:async e=>{r({isLoading:!0,error:null});try{return await n.updateLeadAssign(e)}catch(a){throw r({error:a.message||"Failed to fetch consultants"}),a}finally{r({isLoading:!1})}},createStaff:async e=>{r({isLoading:!0,error:null});try{const a=await n.createStaff(e);return r(t=>({users:[...t.users,a]})),a}catch(a){throw console.log(a,"akcnasncjsncascs"),r({error:a.message||"Failed to create staff"}),c.error(a.message||"Failed to create staff"),a}finally{r({isLoading:!1})}},updateStaff:async(e,a)=>{r({isLoading:!0,error:null});try{const t=o().users,s=await n.updateStaff(e,a);return r(l=>({users:l.users.map(f=>f.id===e?{...f,...s}:f)})),s}catch(t){throw r({error:t.message||"Failed to update staff"}),t}finally{r({isLoading:!1})}},deleteStaff:async e=>{r({isLoading:!0,error:null});try{await n.deleteStaff(e),r(a=>({users:a.users.filter(t=>t.id!==e)}))}catch(a){throw r({error:a.message||"Failed to delete staff"}),a}finally{r({isLoading:!1})}},toggleStaffStatus:async(e,a)=>{r({isLoading:!0,error:null});try{const t=o().users,s=await n.toggleStaffStatus(e,a);r(l=>({users:l.users.map(f=>f.id===e?{...f,isActive:s.isActive}:f)}))}catch(t){throw r({error:t.message||"Failed to toggle staff status"}),t}finally{r({isLoading:!1})}},importStaffCSV:async e=>{r({isLoading:!0,error:null});try{const a=await n.importStaffCSV(e);return await o().fetchAllStaff(),a}catch(a){throw r({error:a.message||"Failed to import staff CSV"}),a}finally{r({isLoading:!1})}},getStaffLogs:async e=>{r({isLoading:!0,error:null});try{return await n.getStaffLogs(e)}catch(a){throw r({error:a.message||"Failed to fetch staff logs"}),a}finally{r({isLoading:!1})}},bulkUpdateStaff:async e=>{r({isLoading:!0,error:null});try{const a=await n.bulkUpdateStaff(e);return r(t=>({users:t.users.map(s=>{const l=a.find(f=>f.id===s.id);return l?{...s,...l}:s})})),a}catch(a){throw r({error:a.message||"Failed to bulk update staff"}),a}finally{r({isLoading:!1})}},clearError:()=>r({error:null})})),m=u(r=>({offices:[],loading:!1,fetchOffices:async()=>{r({loading:!0});try{const o=await i.getAllOffices();console.log(o,"asknacnascjasncasn"),r({offices:o})}finally{r({loading:!1})}},createOffice:async o=>{const e=await i.createOffice(o);return r(a=>({offices:[...a.offices,e]})),e},updateOffice:async(o,e)=>{const a=await i.updateOffice(o,e);return r(t=>({offices:t.offices.map(s=>s.id===o?a:s)})),a},toggleOfficeStatus:async(o,e)=>{const a=await i.toggleOfficeStatus(o,e);return r(t=>({offices:t.offices.map(s=>s.id===o?a:s)})),a}}));export{m as a,h as u};
