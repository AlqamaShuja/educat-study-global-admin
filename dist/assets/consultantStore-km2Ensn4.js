import{d,c as p}from"./index-8BfwU0ug.js";const l={async getAssignedLeads(){return await d.get("/consultant/leads")},async getStudentProfile(r){return await d.get(`/consultant/students/${r}/profile`)},async updateLeadStatus(r,c){return await d.put(`/consultant/leads/${r}/status`,{status:c})},async addConsultationNotes(r,c){return await d.post(`/consultant/leads/${r}/notes`,{note:c})},async getLeadTasks(r){return await d.get(`/consultant/leads/${r}/tasks`)},async getAllLeadTasks(){return await d.get("/consultant/tasks")},async deleteLeadTaskById(r){return await d.delete(`/consultant/tasks/${r}`)},async editLeadTask(r,c){return await d.put(`/consultant/tasks/${r}`,c)},async getLeadDocuments(r){return await d.get(`/consultant/leads/${r}/documents`)},async setFollowUpTask(r,c){return await d.post(`/consultant/leads/${r}/tasks`,c)},async uploadLeadDocument(r,c){try{return await d.post(`/consultant/leads/${r}/documents`,c,{headers:{"Content-Type":"multipart/form-data"}})}catch(a){return a}},async requestProfileInfo(r,c){return await d.post(`/consultant/students/${r}/review`,{message:c})},async sendReviewNotification(r,c){return await d.post(`/consultant/students/${r}/notifications`,{message:c})},async sendMessage(r,c){return await d.post(`/consultant/students/${r}/messages`,{message:c})},async scheduleMeeting(r,c){return await d.post(`/consultant/students/${r}/meetings`,c)},async shareResources(r,c){return await d.post(`/consultant/students/${r}/resources`,{resources:c})},async getCommunicationHistory(r){return await d.get(`/consultant/students/${r}/communication`)},async markMessagesAsRead(r){return await d.patch(`/consultant/students/${r}/messages/read`)},async createApplicationChecklist(r,c){return await d.post(`/consultant/students/${r}/checklist`,{items:c})},async trackDocumentSubmission(r,c){return await d.put(`/consultant/students/${r}/documents`,c,{headers:{"Content-Type":"multipart/form-data"}})},async setDeadlineReminder(r,c){return await d.post(`/consultant/students/${r}/reminders`,c)},async updateApplicationStatus(r,c){return await d.put(`/consultant/students/${r}/application-status`,{status:c})},async getApplicationProgress(r){return await d.get(`/consultant/students/${r}/progress`)},async getAppointments(){return await d.get("/consultant/appointments")},async updateAppointment(r,c){return await d.put(`/consultant/appointments/${r}`,c)},async deleteAppointment(r){return await d.delete(`/consultant/appointments/${r}`)},async updateDocumentStatus(r,c,a){return await d.put(`/consultant/documents/${r}/status`,{status:c,notes:a})},async updateLeadParkedStatus(r,c){return await d.put(`/consultant/leads/${r}/parked`,{parked:c})},async createProposal(r,c){return await d.post(`/consultant/leads/${r}/proposals`,c)},async getProposals(r=""){const c=r?{status:r}:{};return await d.get("/consultant/proposals",{params:c})},async getProposalsByLead(r){return await d.get(`/consultant/leads/${r}/proposals`)},async getProposalById(r){return await d.get(`/consultant/proposals/${r}`)},async updateProposal(r,c){return await d.put(`/consultant/proposals/${r}`,c)},async deleteProposal(r){return await d.delete(`/consultant/proposals/${r}`)},async getProposalStats(){return await d.get("/consultant/proposals/stats")},async createChecklist(r,c){return await d.post(`/checklists/student/${r}`,c)},async getStudentChecklists(r){return await d.get(`/checklists/student/${r}`)},async updateChecklist(r,c){return await d.patch(`/checklists/${r}`,c)},async deleteChecklist(r){return await d.delete(`/checklists/${r}`)}},h=p((r,c)=>({leads:[],selectedLead:null,tasks:[],documents:[],loading:!1,error:null,studentProfile:null,appointments:[],proposals:[],checklists:[],setLoading:a=>r({loading:a}),setError:a=>r({error:a}),clearError:()=>r({error:null}),fetchLeads:async()=>{var a,o;r({loading:!0,error:null});try{const t=await l.getAssignedLeads();return r({leads:t,loading:!1}),t}catch(t){const s=((o=(a=t.response)==null?void 0:a.data)==null?void 0:o.error)||t.message||"Failed to fetch leads";throw r({error:s,loading:!1}),t}},fetchStudentProfile:async a=>{var o,t;r({loading:!0,error:null,studentProfile:null});try{const s=await l.getStudentProfile(a);return r({studentProfile:s,loading:!1}),s}catch(s){const e=((t=(o=s.response)==null?void 0:o.data)==null?void 0:t.error)||s.message||"Failed to fetch student profile";throw r({error:e,loading:!1}),s}},updateLeadStatus:async(a,o)=>{var t,s;try{const e=await l.updateLeadStatus(a,o);return r(n=>{var i;return{leads:n.leads.map(u=>u.id===a?{...u,status:o}:u),selectedLead:((i=n.selectedLead)==null?void 0:i.id)===a?{...n.selectedLead,status:o}:n.selectedLead}}),e}catch(e){const n=((s=(t=e.response)==null?void 0:t.data)==null?void 0:s.error)||e.message||"Failed to update lead status";throw r({error:n}),e}},addConsultationNote:async(a,o)=>{var t,s;try{const e=await l.addConsultationNotes(a,o);return r(n=>{var i;return{leads:n.leads.map(u=>u.id===a?{...u,history:[...u.history||[],{note:o,timestamp:new Date().toISOString()}]}:u),selectedLead:((i=n.selectedLead)==null?void 0:i.id)===a?{...n.selectedLead,history:[...n.selectedLead.history||[],{note:o,timestamp:new Date().toISOString()}]}:n.selectedLead}}),e}catch(e){const n=((s=(t=e.response)==null?void 0:t.data)==null?void 0:s.error)||e.message||"Failed to add consultation note";throw r({error:n}),e}},fetchLeadTasks:async a=>{var o,t;r({loading:!0,error:null});try{const s=await l.getLeadTasks(a);return r({tasks:s,loading:!1}),s}catch(s){const e=((t=(o=s.response)==null?void 0:o.data)==null?void 0:t.error)||s.message||"Failed to fetch tasks";throw r({error:e,loading:!1}),s}},fetchAllLeadTasks:async()=>{var a,o;r({loading:!0,error:null});try{const t=await l.getAllLeadTasks();return r({tasks:t,loading:!1}),t}catch(t){const s=((o=(a=t.response)==null?void 0:a.data)==null?void 0:o.error)||t.message||"Failed to fetch tasks";throw r({error:s,loading:!1}),t}},deleteLeadTaskById:async a=>{var o,t,s;r({error:null});try{return r(n=>{var i;return{...n,tasks:(i=n.tasks)==null?void 0:i.filter(u=>u.id!==a),loading:!1}}),await l.deleteLeadTaskById(a)}catch(e){const n=((t=(o=e.response)==null?void 0:o.data)==null?void 0:t.message)||e.message||"Failed to delete task";throw r({error:n,loading:!1}),new AppError(n,((s=e.response)==null?void 0:s.status)||500)}},editLeadTask:async(a,o)=>{var t,s,e;r({loading:!0,error:null});try{const n=await l.editLeadTask(a,{description:o.description,dueDate:new Date(o.dueDate).toISOString(),status:o.status,leadId:o.leadId,notes:o.notes});return r(i=>({...i,tasks:i.tasks.map(u=>u.id===a?{...u,...n.data}:u),loading:!1})),n}catch(n){const i=((s=(t=n.response)==null?void 0:t.data)==null?void 0:s.message)||n.message||"Failed to update task";throw r({error:i,loading:!1}),new AppError(i,((e=n.response)==null?void 0:e.status)||500)}},fetchLeadDocuments:async a=>{var o,t;r({loading:!0,error:null});try{const s=await l.getLeadDocuments(a);return r({documents:s,loading:!1}),s}catch(s){const e=((t=(o=s.response)==null?void 0:o.data)==null?void 0:t.error)||s.message||"Failed to fetch documents";throw r({error:e,loading:!1}),s}},createTask:async(a,o)=>{var t,s;try{const e=await l.setFollowUpTask(a,o);return await c().fetchLeadTasks(a),e}catch(e){const n=((s=(t=e.response)==null?void 0:t.data)==null?void 0:s.error)||e.message||"Failed to create task";throw r({error:n}),e}},setFollowUpTask:async(a,o)=>{var t,s;try{const e=await l.setFollowUpTask(a,o);return r(n=>({tasks:[...n.tasks,e]})),e}catch(e){const n=((s=(t=e.response)==null?void 0:t.data)==null?void 0:s.error)||e.message||"Failed to set follow-up task";throw r({error:n}),e}},uploadDocument:async(a,o)=>{var t,s;try{const e=await l.uploadLeadDocument(a,o);return await c().fetchLeadDocuments(a),e}catch(e){console.log(e,"asncajsncajsncsn");const n=e.error||((s=(t=e.response)==null?void 0:t.data)==null?void 0:s.error)||e.message||"Failed to upload document";throw r({error:n}),e}},uploadLeadDocument:async(a,o)=>{var t,s;try{const e=await l.uploadLeadDocument(a,o);return r(n=>({documents:[...n.documents,...e]})),e}catch(e){const n=((s=(t=e.response)==null?void 0:t.data)==null?void 0:s.error)||e.message||"Failed to upload lead document";throw r({error:n}),e}},updateDocumentStatus:async(a,o,t)=>{var s,e;try{const n=await l.updateDocumentStatus(a,o,t);return r(i=>({documents:i.documents.map(u=>u.id===a?{...u,status:o,notes:t}:u)})),n}catch(n){const i=((e=(s=n.response)==null?void 0:s.data)==null?void 0:e.error)||n.message||"Failed to update document status";throw r({error:i}),n}},getStudentProfile:async a=>{var o,t;try{return await l.getStudentProfile(a)}catch(s){const e=((t=(o=s.response)==null?void 0:o.data)==null?void 0:t.error)||s.message||"Failed to get student profile";throw r({error:e}),s}},requestProfileInfo:async(a,o)=>{var t,s;try{return await l.requestProfileInfo(a,o)}catch(e){const n=((s=(t=e.response)==null?void 0:t.data)==null?void 0:s.error)||e.message||"Failed to request profile info";throw r({error:n}),e}},sendReviewNotification:async(a,o)=>{var t,s;try{return await l.sendReviewNotification(a,o)}catch(e){const n=((s=(t=e.response)==null?void 0:t.data)==null?void 0:s.error)||e.message||"Failed to send review notification";throw r({error:n}),e}},sendMessage:async(a,o)=>{var t,s;try{return await l.sendMessage(a,o)}catch(e){const n=((s=(t=e.response)==null?void 0:t.data)==null?void 0:s.error)||e.message||"Failed to send message";throw r({error:n}),e}},scheduleMeeting:async(a,o)=>{var t,s;try{return await l.scheduleMeeting(a,o)}catch(e){const n=((s=(t=e.response)==null?void 0:t.data)==null?void 0:s.error)||e.message||"Failed to schedule meeting";throw r({error:n}),e}},shareResources:async(a,o)=>{var t,s;try{return await l.shareResources(a,o)}catch(e){const n=((s=(t=e.response)==null?void 0:t.data)==null?void 0:s.error)||e.message||"Failed to share resources";throw r({error:n}),e}},getCommunicationHistory:async a=>{var o,t;try{return await l.getCommunicationHistory(a)}catch(s){const e=((t=(o=s.response)==null?void 0:o.data)==null?void 0:t.error)||s.message||"Failed to get communication history";throw r({error:e}),s}},markMessagesAsRead:async a=>{var o,t;try{return await l.markMessagesAsRead(a)}catch(s){const e=((t=(o=s.response)==null?void 0:o.data)==null?void 0:t.error)||s.message||"Failed to mark messages as read";throw r({error:e}),s}},createApplicationChecklist:async(a,o)=>{var t,s;try{return await l.createApplicationChecklist(a,o)}catch(e){const n=((s=(t=e.response)==null?void 0:t.data)==null?void 0:s.error)||e.message||"Failed to create application checklist";throw r({error:n}),e}},trackDocumentSubmission:async(a,o)=>{var t,s;try{return await l.trackDocumentSubmission(a,o)}catch(e){const n=((s=(t=e.response)==null?void 0:t.data)==null?void 0:s.error)||e.message||"Failed to track document submission";throw r({error:n}),e}},setDeadlineReminder:async(a,o)=>{var t,s;try{return await l.setDeadlineReminder(a,o)}catch(e){const n=((s=(t=e.response)==null?void 0:t.data)==null?void 0:s.error)||e.message||"Failed to set deadline reminder";throw r({error:n}),e}},updateApplicationStatus:async(a,o)=>{var t,s;try{return await l.updateApplicationStatus(a,o)}catch(e){const n=((s=(t=e.response)==null?void 0:t.data)==null?void 0:s.error)||e.message||"Failed to update application status";throw r({error:n}),e}},getApplicationProgress:async a=>{var o,t;try{return await l.getApplicationProgress(a)}catch(s){const e=((t=(o=s.response)==null?void 0:o.data)==null?void 0:t.error)||s.message||"Failed to get application progress";throw r({error:e}),s}},updateTaskStatus:async(a,o)=>{var t,s;r({loading:!0});try{await api.put(`/consultant/tasks/${a}/status`,{status:o}),r(e=>({tasks:e.tasks.map(n=>n.id===a?{...n,status:o}:n),loading:!1}))}catch(e){const n=((s=(t=e.response)==null?void 0:t.data)==null?void 0:s.error)||e.message||"Failed to update task status";throw r({error:n,loading:!1}),e}},selectLead:a=>r({selectedLead:a}),clearSelectedLead:()=>r({selectedLead:null}),clearData:()=>r({leads:[],selectedLead:null,tasks:[],documents:[],loading:!1,error:null,studentProfile:null,appointments:[]}),fetchAppointments:async()=>{var a,o;r({loading:!0,error:null});try{const t=await l.getAppointments();return r({appointments:t,loading:!1}),t}catch(t){const s=((o=(a=t.response)==null?void 0:a.data)==null?void 0:o.error)||t.message||"Failed to fetch appointments";throw r({error:s,loading:!1}),t}},updateAppointment:async(a,o)=>{var t,s;try{const e=await l.updateAppointment(a,o);return r(n=>({appointments:n.appointments.map(i=>i.id===a?e:i)})),e}catch(e){const n=((s=(t=e.response)==null?void 0:t.data)==null?void 0:s.error)||e.message||"Failed to update appointment";throw r({error:n}),e}},deleteAppointment:async a=>{var o,t;try{await l.deleteAppointment(a),r(s=>({appointments:s.appointments.filter(e=>e.id!==a)}))}catch(s){const e=((t=(o=s.response)==null?void 0:o.data)==null?void 0:t.error)||s.message||"Failed to delete appointment";throw r({error:e}),s}},updateLeadParkedStatus:async(a,o)=>{var t,s;try{const e=await l.updateLeadParkedStatus(a,o);return r(n=>{var i;return{leads:n.leads.map(u=>u.id===a?{...u,parked:o}:u),selectedLead:((i=n.selectedLead)==null?void 0:i.id)===a?{...n.selectedLead,parked:o}:n.selectedLead}}),e}catch(e){const n=((s=(t=e.response)==null?void 0:t.data)==null?void 0:s.error)||e.message||"Failed to update parked status";throw r({error:n}),e}},createProposal:async(a,o)=>{var t,s;r({loading:!0,error:null});try{const e=await l.createProposal(a,o);return r(n=>({proposals:[...n.proposals,e],loading:!1})),e}catch(e){const n=((s=(t=e.response)==null?void 0:t.data)==null?void 0:s.error)||e.message||"Failed to create proposal";throw r({error:n,loading:!1}),e}},fetchProposals:async(a="")=>{var o,t;r({loading:!0,error:null});try{const s=await l.getProposals(a);return r({proposals:s.proposals,loading:!1}),s}catch(s){const e=((t=(o=s.response)==null?void 0:o.data)==null?void 0:t.error)||s.message||"Failed to fetch proposals";throw r({error:e,loading:!1}),s}},fetchProposalsByLead:async a=>{var o,t;r({loading:!0,error:null});try{return(await l.getProposalsByLead(a)).proposals}catch(s){const e=((t=(o=s.response)==null?void 0:o.data)==null?void 0:t.error)||s.message||"Failed to fetch proposals for lead";throw r({error:e,loading:!1}),s}},updateProposal:async(a,o)=>{var t,s;try{const e=await l.updateProposal(a,o);return r(n=>({proposals:n.proposals.map(i=>i.id===a?e:i)})),e}catch(e){const n=((s=(t=e.response)==null?void 0:t.data)==null?void 0:s.error)||e.message||"Failed to update proposal";throw r({error:n}),e}},deleteProposal:async a=>{var o,t;try{await l.deleteProposal(a),r(s=>({proposals:s.proposals.filter(e=>e.id!==a)}))}catch(s){const e=((t=(o=s.response)==null?void 0:o.data)==null?void 0:t.error)||s.message||"Failed to delete proposal";throw r({error:e}),s}},createChecklist:async(a,o)=>{var t,s;r({loading:!0,error:null});try{const e=await l.createChecklist(a,o);return r(n=>({checklists:[...n.checklists,e],loading:!1})),e}catch(e){const n=((s=(t=e.response)==null?void 0:t.data)==null?void 0:s.error)||e.message||"Failed to create checklist";throw r({error:n,loading:!1}),e}},fetchStudentChecklists:async a=>{var o,t;r({loading:!0,error:null});try{const s=await l.getStudentChecklists(a);return r({checklists:s,loading:!1}),s}catch(s){const e=((t=(o=s.response)==null?void 0:o.data)==null?void 0:t.error)||s.message||"Failed to fetch checklists";throw r({error:e,loading:!1}),s}},updateChecklist:async(a,o)=>{var t,s;try{return await l.updateChecklist(a,o)}catch(e){const n=((s=(t=e.response)==null?void 0:t.data)==null?void 0:s.error)||e.message||"Failed to update checklist";throw r({error:n}),e}},deleteChecklist:async a=>{var o,t;try{await l.deleteChecklist(a),r(s=>({checklists:s.checklists.filter(e=>e.id!==a)}))}catch(s){const e=((t=(o=s.response)==null?void 0:o.data)==null?void 0:t.error)||s.message||"Failed to delete checklist";throw r({error:e}),s}}}));export{h as u};
